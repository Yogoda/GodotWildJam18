[gd_scene load_steps=9 format=2]

[ext_resource path="res://Sprite/Swarm/swarm1.png" type="Texture" id=1]
[ext_resource path="res://Sprite/Swarm/swarm2.png" type="Texture" id=2]
[ext_resource path="res://Sounds/cricket/cricket01.wav" type="AudioStream" id=3]
[ext_resource path="res://Sounds/cricket/cricket04.wav" type="AudioStream" id=4]
[ext_resource path="res://Sounds/cricket/cricket02.wav" type="AudioStream" id=5]
[ext_resource path="res://Sounds/cricket/cricket03.wav" type="AudioStream" id=6]

[sub_resource type="GDScript" id=1]
script/source = "extends Node2D

onready var cricket_sound = $SoCricket01

var sound_delay_min = 1.0
var sound_delay_max = 2.0
var sound_delay

var gfx_swarm_1 = preload('res://Sprite/Swarm/swarm1.png')
var gfx_swarm_2 = preload('res://Sprite/Swarm/swarm2.png')

var target
const speed = 0.01

const eating_max = 3.0
var eating_counter

var escaping = false

var last_pos

# Called when the node enters the scene tree for the first time.
func _ready():
	
	choose_target()
	sound_delay = rand_range(sound_delay_min,sound_delay_max)
		
func choose_target():
	
	target = GameManager.field.get_tile_for_swarm()
	
	if target != null:
		target.targetted_by_swarm = self
	else:
		escaping = true
		target = GameManager.get_swarm_escape()
		
	goto_target()
		
func goto_target():
	
	$Tween.stop_all()
	$Tween.interpolate_property(self, 
								\"global_position\", 
								global_position, 
								target.global_position,
								(target.global_position - global_position).length() * speed,
								Tween.TRANS_QUAD)

	$Tween.start()

# Called every frame. 'delta' is the elapsed time since the previous frame.
func _physics_process(delta):
	
	var velocity
	
	if last_pos != null:
		velocity = global_position.x - last_pos.x
	else:
		velocity = 0
		
	if velocity > 0:
		scale.x = -1
	else:
		scale.x = 1

	last_pos = global_position
	
	if not cricket_sound.playing:
		sound_delay -= delta
		if sound_delay < 0:
			match randi()%4:
				0: cricket_sound = $SoCricket01
				1: cricket_sound = $SoCricket02
				2: cricket_sound = $SoCricket03
				3: cricket_sound = $SoCricket04
				
			cricket_sound.play()
			
			sound_delay = rand_range(sound_delay_min, sound_delay_max)
	
	if not escaping:
		if target.swarm == self and eating_counter > 0:
			eating_counter -= delta
			
			if eating_counter <= 0:
				_finished_eating()
			
func _finished_eating():
	
	target.destroy()
	
	var swarm = GameManager.swarm_scene.instance()
	
	swarm.global_position = global_position
	get_parent().add_child(swarm)

	choose_target()

func _on_Tween_tween_completed(object, key):
	
	if escaping:
		queue_free()
	else:
		target.swarm = self
		eating_counter = eating_max
"

[sub_resource type="Animation" id=2]
resource_name = "Fly"
length = 0.4
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("swarm1:texture")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.2, 0.4 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 1,
"values": [ ExtResource( 1 ), ExtResource( 2 ), ExtResource( 1 ) ]
}

[node name="Swarm" type="Node2D"]
position = Vector2( 3.4917, -25.1402 )
script = SubResource( 1 )

[node name="swarm1" type="Sprite" parent="."]
position = Vector2( 0.698334, -6.28506 )
scale = Vector2( 0.5, 0.5 )
texture = ExtResource( 1 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
autoplay = "Fly"
anims/Fly = SubResource( 2 )

[node name="Tween" type="Tween" parent="."]

[node name="SoCricket01" type="AudioStreamPlayer2D" parent="."]
stream = ExtResource( 3 )
volume_db = -10.0
attenuation = 0.420448

[node name="SoCricket02" type="AudioStreamPlayer2D" parent="."]
stream = ExtResource( 5 )
volume_db = -10.0
attenuation = 0.0507658

[node name="SoCricket03" type="AudioStreamPlayer2D" parent="."]
stream = ExtResource( 6 )
volume_db = -10.0
attenuation = 0.0185814

[node name="SoCricket04" type="AudioStreamPlayer2D" parent="."]
stream = ExtResource( 4 )
volume_db = -10.0
attenuation = 0.420448
[connection signal="tween_completed" from="Tween" to="." method="_on_Tween_tween_completed"]
