[gd_scene load_steps=8 format=2]

[ext_resource path="res://Sprite/Earth/earth_dry.png" type="Texture" id=1]
[ext_resource path="res://Sprite/Earth/earth_normal.png" type="Texture" id=2]
[ext_resource path="res://Sprite/Earth/earth_wet.png" type="Texture" id=3]
[ext_resource path="res://Sprite/Corn/corn_stage6.png" type="Texture" id=4]
[ext_resource path="res://Sprite/Earth/selection.png" type="Texture" id=5]

[sub_resource type="GDScript" id=1]
script/source = "extends Node2D

enum tile_action {NONE, PLANT, WATER, HARVEST, BURN}

const wetness_max = 400
const wetness_normal = 100
const wetness_dry = 0
const rain_hydration_speed = 0.3
const rain_hydration = 1
var wetness

var dry_speed = 0.1

var growth_stage = 0
const growth_stage_max = 6

const growth_speed = 0.2
var growth_counter;
var growth_base = int(300 / growth_speed);
var growth_rand = int(200 / growth_speed);

var gfx_corn_1 = preload(\"res://Sprite/Corn/corn_stage1.png\")
var gfx_corn_2 = preload(\"res://Sprite/Corn/corn_stage2.png\")
var gfx_corn_3 = preload(\"res://Sprite/Corn/corn_stage3.png\")
var gfx_corn_4 = preload(\"res://Sprite/Corn/corn_stage4.png\")
var gfx_corn_5 = preload(\"res://Sprite/Corn/corn_stage5.png\")
var gfx_corn_6 = preload(\"res://Sprite/Corn/corn_stage6.png\")

var targetted_by_swarm
var swarm

func set_growth_stage(stage):
	
	growth_stage = stage
	
	if growth_stage > 0 and growth_stage < growth_stage_max:
		growth_counter = growth_base + randi() % growth_rand
	else:
		growth_counter = 0

	_update_sprite()

# Called when the node enters the scene tree for the first time.
func _ready():

	wetness = wetness_normal
#	set_growth_stage(0)
	
	set_growth_stage(randi() % growth_stage_max)
	growth_counter = randi() % growth_rand

	show_selection(false)
	
	_flip_random()
	
func _rand():
	
	if randi() % 2 == 0:
		return true
		
	return false
	
func _flip_random():
	
	$earth_dry.flip_h = _rand()
	$earth_normal.flip_h = _rand()
	$earth_wet.flip_h = _rand()
	
	$Corn.flip_h = _rand()

func _update_sprite():
	
	var flip = 1
	
	if randf() < 0.5:
		flip = -1
	
	$earth_dry.visible = false
	$earth_normal.visible = false
	$earth_wet.visible = false
	
	if wetness <= wetness_dry:
		$earth_dry.visible = true
	elif wetness <= wetness_normal:
		$earth_normal.visible = true
	else:
		$earth_wet.visible = true
		
	if growth_stage == 0:
		$Corn.visible = false
	else:
		match growth_stage:
			1: $Corn.texture = gfx_corn_1
			2: $Corn.texture = gfx_corn_2
			3: $Corn.texture = gfx_corn_3
			4: $Corn.texture = gfx_corn_4
			5: $Corn.texture = gfx_corn_5
			6: $Corn.texture = gfx_corn_6
		$Corn.visible = true

func _physics_process(delta):

	if GameManager.weather == GameManager.RAIN:
		
		if wetness < wetness_max and randf() < rain_hydration_speed:
			wetness += rain_hydration
			clamp(wetness, 0, wetness_max)
			_update_sprite()
	else:
		if wetness > 0:
			
			if randf() <= dry_speed:
				wetness -= 1
				
				if wetness == wetness_dry or wetness == wetness_normal:
					_update_sprite()
			
	if growth_stage > 0 and growth_stage < growth_stage_max and growth_counter > 0:
		
		if wetness > wetness_normal:
			growth_counter -= 2;
		elif wetness > wetness_dry:
			growth_counter -= 1;
		
		if growth_counter <= 0:
			set_growth_stage(growth_stage + 1)

func show_selection(show = true):
	
	if show:
		$selection.show()
		$selection2.show()
	else:
		$selection.hide()
		$selection2.hide()
		
func _on_Collision_input_event(viewport, event, shape_idx):
	
	if event is InputEventMouseButton:
		if event.pressed and event.button_index == BUTTON_LEFT:
			
			print(\"clic on tile\")
			GameManager.drone.add_target(self)

func _on_Collision_mouse_entered():
	show_selection()
	
	if Input.is_mouse_button_pressed(BUTTON_LEFT):
		print(\"clic on tile\")
		GameManager.drone.add_target(self)

func _on_Collision_mouse_exited():
	show_selection(false)
	
func get_available_action():
	
	if swarm != null:
		return tile_action.BURN
	elif growth_stage == 0:
		return tile_action.PLANT
	elif growth_stage == growth_stage_max:
		return tile_action.HARVEST
	elif wetness <= wetness_normal:
		return tile_action.WATER
	else:
		return tile_action.NONE
		
func attracts_swarm():

	if growth_stage > 0 and swarm == null and targetted_by_swarm == null:
		return true
	else:
		return false
		
func clear_swarm():
	
	if targetted_by_swarm != null:
	
		targetted_by_swarm.queue_free()
		targetted_by_swarm = null
		swarm = null

func perform_action():
	
	if growth_stage == 0:
		set_growth_stage(1)
	elif growth_stage == growth_stage_max:
		
		GameManager.silo.add(25)
		set_growth_stage(0)
	else:
		wetness = wetness_max
		_update_sprite()
"

[sub_resource type="RectangleShape2D" id=2]
extents = Vector2( 63.3522, 59.1993 )

[node name="Tile" type="Node2D"]
script = SubResource( 1 )

[node name="selection" type="Sprite" parent="."]
position = Vector2( -0.00495744, -81.0365 )
scale = Vector2( 1.06144, 0.940163 )
texture = ExtResource( 5 )
region_enabled = true
region_rect = Rect2( 7.45681, 58.439, 120.586, 43.7976 )

[node name="earth_wet" type="Sprite" parent="."]
texture = ExtResource( 3 )

[node name="earth_normal" type="Sprite" parent="."]
texture = ExtResource( 2 )

[node name="earth_dry" type="Sprite" parent="."]
visible = false
texture = ExtResource( 1 )

[node name="Corn" type="Sprite" parent="."]
position = Vector2( 2.7018, -75.3524 )
scale = Vector2( 1.1, 1.1 )
texture = ExtResource( 4 )

[node name="selection2" type="Sprite" parent="."]
position = Vector2( 0, 42 )
scale = Vector2( 1.06304, 1 )
texture = ExtResource( 5 )
region_enabled = true
region_rect = Rect2( 7.45681, 58.439, 120.586, 43.7976 )

[node name="selection3" type="Sprite" parent="selection2"]
position = Vector2( 57.0049, -43.2919 )
scale = Vector2( 1.38383, 1.21921 )
texture = ExtResource( 5 )
region_enabled = true
region_rect = Rect2( 0.435944, 0.553786, 4.6329, 102.851 )

[node name="selection4" type="Sprite" parent="selection2"]
position = Vector2( -57.475, -43.297 )
scale = Vector2( 1.17968, 1.21931 )
texture = ExtResource( 5 )
region_enabled = true
region_rect = Rect2( 0.435944, 0.553786, 4.6329, 102.851 )

[node name="Collision" type="StaticBody2D" parent="."]
input_pickable = true

[node name="CollisionShape2D" type="CollisionShape2D" parent="Collision"]
position = Vector2( -0.233032, -6.53552 )
shape = SubResource( 2 )
[connection signal="input_event" from="Collision" to="." method="_on_Collision_input_event"]
[connection signal="mouse_entered" from="Collision" to="." method="_on_Collision_mouse_entered"]
[connection signal="mouse_exited" from="Collision" to="." method="_on_Collision_mouse_exited"]
