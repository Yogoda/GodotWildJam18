[gd_resource type="VisualShader" load_steps=17 format=2]

[ext_resource path="res://Sprite/Corn/corn_stage6.png" type="Texture" id=1]

[sub_resource type="VisualShaderNodeInput" id=1]
output_port_for_preview = 0
input_name = "time"

[sub_resource type="VisualShaderNodeVectorCompose" id=2]

[sub_resource type="VisualShaderNodeVectorOp" id=3]

[sub_resource type="VisualShaderNodeScalarFunc" id=11]
function = 0

[sub_resource type="VisualShaderNodeScalarOp" id=12]
default_input_values = [ 0, 0.0, 1, 50.0 ]
operator = 3

[sub_resource type="VisualShaderNodeInput" id=14]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=15]

[sub_resource type="VisualShaderNodeScalarOp" id=16]
operator = 2

[sub_resource type="VisualShaderNodeScalarFunc" id=17]
function = 31

[sub_resource type="VisualShaderNodeScalarOp" id=18]

[sub_resource type="VisualShaderNodeInput" id=19]
input_name = "screen_uv"

[sub_resource type="VisualShaderNodeScalarOp" id=20]
default_input_values = [ 0, 0.0, 1, 17.0 ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=7]
input_name = "uv"

[sub_resource type="VisualShaderNodeInput" id=9]
input_name = "texture"

[sub_resource type="VisualShaderNodeTexture" id=10]
source = 2
texture = ExtResource( 1 )

[resource]
code = "shader_type canvas_item;



void vertex() {
// Output:0

}

void fragment() {
// Input:10
	float n_out10p0;
	n_out10p0 = TIME;

// Input:22
	vec3 n_out22p0;
	n_out22p0 = vec3(SCREEN_UV,0.0);

// ScalarOp:23
	float n_in23p1 = 17.00000;
	float n_out23p0;
	n_out23p0 = dot(n_out22p0,vec3(0.333333,0.333333,0.333333)) * n_in23p1;

// ScalarOp:21
	float n_out21p0;
	n_out21p0 = n_out10p0 + n_out23p0;

// ScalarFunc:14
	float n_out14p0;
	n_out14p0 = sin(n_out21p0);

// ScalarOp:15
	float n_in15p1 = 50.00000;
	float n_out15p0;
	n_out15p0 = n_out14p0 / n_in15p1;

// Input:17
	vec3 n_out17p0;
	n_out17p0 = vec3(UV,0.0);

// VectorDecompose:18
	float n_out18p0;
	float n_out18p1;
	float n_out18p2;
	n_out18p0 = n_out17p0.x;
	n_out18p1 = n_out17p0.y;
	n_out18p2 = n_out17p0.z;

// ScalarFunc:20
	float n_out20p0;
	n_out20p0 = 1.0-n_out18p1;

// ScalarOp:19
	float n_out19p0;
	n_out19p0 = n_out15p0 * n_out20p0;

// VectorCompose:12
	float n_in12p1 = 0.00000;
	float n_in12p2 = 0.00000;
	vec3 n_out12p0;
	n_out12p0 = vec3( n_out19p0 , n_in12p1 , n_in12p2 );

// Input:3
	vec3 n_out3p0;
	n_out3p0 = vec3(UV,0.0);

// VectorOp:13
	vec3 n_out13p0;
	n_out13p0 = n_out12p0 + n_out3p0;

// Input:5

// Texture:7
	vec3 n_out7p0;
	float n_out7p1;
	{
		vec4 _tex_read = texture( TEXTURE , n_out13p0.xy );
		n_out7p0 = _tex_read.rgb;
		n_out7p1 = _tex_read.a;
	}

// Output:0
	COLOR.rgb = n_out7p0;
	COLOR.a = n_out7p1;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -1821.22, -733.75 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 120, -160 )
nodes/fragment/3/node = SubResource( 7 )
nodes/fragment/3/position = Vector2( -880, -140 )
nodes/fragment/5/node = SubResource( 9 )
nodes/fragment/5/position = Vector2( -420, -20 )
nodes/fragment/7/node = SubResource( 10 )
nodes/fragment/7/position = Vector2( -140, -180 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( -1440, -760 )
nodes/fragment/12/node = SubResource( 2 )
nodes/fragment/12/position = Vector2( -580, -360 )
nodes/fragment/13/node = SubResource( 3 )
nodes/fragment/13/position = Vector2( -340, -300 )
nodes/fragment/14/node = SubResource( 11 )
nodes/fragment/14/position = Vector2( -980, -620 )
nodes/fragment/15/node = SubResource( 12 )
nodes/fragment/15/position = Vector2( -780, -620 )
nodes/fragment/17/node = SubResource( 14 )
nodes/fragment/17/position = Vector2( -1680, -320 )
nodes/fragment/18/node = SubResource( 15 )
nodes/fragment/18/position = Vector2( -1500, -320 )
nodes/fragment/19/node = SubResource( 16 )
nodes/fragment/19/position = Vector2( -820, -380 )
nodes/fragment/20/node = SubResource( 17 )
nodes/fragment/20/position = Vector2( -1200, -260 )
nodes/fragment/21/node = SubResource( 18 )
nodes/fragment/21/position = Vector2( -1200, -660 )
nodes/fragment/22/node = SubResource( 19 )
nodes/fragment/22/position = Vector2( -1740, -600 )
nodes/fragment/23/node = SubResource( 20 )
nodes/fragment/23/position = Vector2( -1440, -520 )
nodes/fragment/connections = PoolIntArray( 5, 0, 7, 2, 7, 0, 0, 0, 7, 1, 0, 1, 3, 0, 13, 1, 12, 0, 13, 0, 13, 0, 7, 0, 14, 0, 15, 0, 17, 0, 18, 0, 15, 0, 19, 0, 19, 0, 12, 0, 18, 1, 20, 0, 20, 0, 19, 1, 10, 0, 21, 0, 21, 0, 14, 0, 22, 0, 23, 0, 23, 0, 21, 1 )
